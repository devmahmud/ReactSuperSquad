{"version":3,"sources":["components/CharacterList.js","actions/index.js","components/HeroList.js","components/SqadStats.js","components/App.js","serviceWorker.js","reducers/heroesReducers.js","reducers/charactersReducer.js","reducers/index.js","index.js"],"names":["connect","state","characters","addCharacterById","id","type","payload","props","className","map","character","key","name","length","onClick","heroes","removeCharacterById","hero","strength","forEach","intelligence","speed","App","Boolean","window","location","hostname","match","createCharacter","characters_json","find","c","action","filter","item","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cd1931f4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addCharacterById } from \"../actions\";\r\n\r\nconst CharacterList = props => {\r\n  return (\r\n    <div>\r\n      <h5>Characters</h5>\r\n      <ul className=\"list-group\">\r\n        {props.characters.map(character => {\r\n          return (\r\n            <li key={character.id} className=\"list-group-item\">\r\n              {character.name}\r\n              {props.characters.length > 5 ? (\r\n                <div\r\n                  onClick={() => props.addCharacterById(character.id)}\r\n                  className=\"d-inline float-right right-btn\"\r\n                >\r\n                  +\r\n                </div>\r\n              ) : (\r\n                <div />\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { characters: state.characters };\r\n};\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return bindActionCreators({addCharacterById},dispatch)\r\n// };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addCharacterById }\r\n)(CharacterList);\r\n","export const ADD_CHARACTER = \"ADD_CHARACTER\";\r\nexport const REMOVE_CHARACTER = \"REMOVE_CHARACTER\";\r\n\r\nexport const addCharacterById = id => {\r\n  const action = {\r\n    type: ADD_CHARACTER,\r\n    payload: id\r\n  };\r\n  return action;\r\n};\r\n\r\nexport const removeCharacterById = id => {\r\n  const action = {\r\n    type: REMOVE_CHARACTER,\r\n    payload: id\r\n  };\r\n  return action;\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeCharacterById } from \"../actions\";\r\n\r\nconst HeroList = props => {\r\n  return (\r\n    <div>\r\n      <h5>Your Hero Squad</h5>\r\n      <ul className=\"list-group\">\r\n        {props.heroes.map(hero => {\r\n          return (\r\n            <li key={hero.id} className=\"list-group-item\">\r\n              {hero.name}\r\n              <div\r\n                onClick={() => props.removeCharacterById(hero.id)}\r\n                className=\"d-inline float-right right-btn\"\r\n              >\r\n                x\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    heroes: state.heroes\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { removeCharacterById }\r\n)(HeroList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst SquadStats = props => {\r\n  const strength = () => {\r\n    let strength = 0;\r\n    props.heroes.forEach(hero => (strength += hero.strength));\r\n    return strength;\r\n  };\r\n  const intelligence = () => {\r\n    let intelligence = 0;\r\n    props.heroes.forEach(hero => (intelligence += hero.intelligence));\r\n    return intelligence;\r\n  };\r\n  const speed = () => {\r\n    let speed = 0;\r\n    props.heroes.forEach(hero => (speed += hero.speed));\r\n    return speed;\r\n  };\r\n  return (\r\n    <div>\r\n      <h5>Squad Stats</h5>\r\n      <ul className=\"list-group\">\r\n        <li className=\"list-group-item\">\r\n          <b>Overall Strength: </b> {strength()}\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          <b>Overall Intelligence: </b> {intelligence()}\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          <b>Overall Speed: </b> {speed()}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    heroes: state.heroes\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SquadStats);\r\n","import React from \"react\";\nimport CharacterList from \"./CharacterList\";\nimport HeroList from \"./HeroList\";\nimport SquadStats from \"./SqadStats\";\nimport \"../styles/index.css\";\n\nfunction App() {\n  return (\n    <div className=\"container text-center\">\n      <h2 className=\"mt-4\">SuperSquad</h2>\n      <hr />\n      <div className=\"row\">\n        <div className=\"col-md-4\">\n          <CharacterList />\n        </div>\n        <div className=\"col-md-4\">\n          <HeroList />\n        </div>\n        <div className=\"col-md-4\">\n          <SquadStats />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import characters_json from \"../data/characters.json\";\r\nimport { ADD_CHARACTER, REMOVE_CHARACTER } from \"../actions\";\r\n\r\nconst heroes = (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_CHARACTER:\r\n      return [...state, createCharacter(action.payload)];\r\n\r\n    case REMOVE_CHARACTER:\r\n      return state.filter(hero => hero.id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createCharacter = id => {\r\n  let characters = characters_json.find(c => c.id === id);\r\n  return characters;\r\n};\r\n\r\nexport default heroes;\r\n","import characters_json from \"../data/characters.json\";\r\nimport { ADD_CHARACTER, REMOVE_CHARACTER } from \"../actions\";\r\nimport { createCharacter } from \"./heroesReducers.js\";\r\n\r\nconst characters = (state = characters_json, action) => {\r\n  switch (action.type) {\r\n    case ADD_CHARACTER:\r\n      let characters = state.filter(item => item.id !== action.payload);\r\n      return characters;\r\n    case REMOVE_CHARACTER:\r\n      return [...state, createCharacter(action.payload)];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default characters;\r\n","import { combineReducers } from \"redux\";\r\nimport characters from \"./charactersReducer\";\r\nimport heroes from \"./heroesReducers\";\r\n\r\nconst rootReducer = combineReducers({ characters, heroes });\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}